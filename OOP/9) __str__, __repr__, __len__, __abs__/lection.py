# Каждый магический метод автоматически срабатывает в определенный момент времени, например:

# __str__() – магический метод для отображения информации об объекте класса для пользователей (например, для функций print, str);
# __repr__() – магический метод для отображения информации об объекте класса в режиме отладки (для разработчиков).
# __len__() – позволяет применять функцию len() к экземплярам класса;
# __abs__() - позволяет применять функцию abs() к экземплярам класса.

class Cat:
    def __init__(self, name):
        self.name = name

    def __repr__(self): # ДЛЯ ОТОБРАЖЕНИЯ ИНФОРМАЦИИ ОБ ОБЪЕКТЕ КЛАССА В РЕЖИМЕ ОТЛАДКИ ДЛЯ РАЗРАБОТЧИКА
        return f"{self.__class__}: {self.name}"
    
    def __str__(self): # ДЛЯ ОТОБРАЖЕНИЯ ИНФОРМАЦИИ ОБ ОБЪЕКТЕ КЛАССА ДЛЯ ПОЛЬЗОВАТЕЛЯ
        return f"{self.name}"
    
cat = Cat("Vasya")
print(cat) # Информация об объекте <__main__.Cat object at 0x0000019CB6680710> - БЕЗ ПРОПИСЫВАНИЯ МЕТОДА __REPR__
            # Используя метод __repr__ : <class '__main__.Cat'>: Vasya


class Point:
    def __init__(self, *args):
        self.__coords = args

    def __len__(self):
        return len(self.__coords)
    
    def __abs__(self):
        return list(map(abs, self.__coords))
p = Point(1, -2, 6, -11)
print(len(p))  # TypeError: object of type 'Point' has no len() - БЕЗ ОБЪЯВЛЕНИЯ метода __len__
                # С объявлением метода __len__  - вернёт размер , те количество координат
print(abs(p)) # С объявлением метода __abs__ - вернёт модули
