class Point:
    def __new__(cls, *args, **kwargs): # cls ссылается на текущий эклемпляр класса ( на текущий класс Point)
        print("вызов __new__ для " + str(cls))
        return super().__new__(cls) # начиная с версии python 3 все классы автоматически и неявно наследуются от базового класса object
                                    # И из этого класса object мы вызываем метод __new__ (функцию super())
                                    # Когда мы делаем этот вызов, мы получаем ссылку на базовый класс object и в этом базовом классе
                                    # через ссылку вызываем магический метод __new__(cls)
                                    # И этот магический метод __new__ запускает процесс создания экземпляра класса и возвращает адрес нового созданного объекта
                                    # А мы с помощью оператора return возвращаем этот адрес дальше 
                                    # ПАРАМЕТР cls - ссылка на класс, для которого создается объект (ссылка на класс Point)
                                    # Идет обращение к базовому классу, из которого вызывается конструктор - метод __new__(cls) с аргументом cls -
                                    # ссылки на текущий класс
    def __init__(self, x=0, y=0):
        print("вызов __init__ для " + str(self)) # self ссылается на создаваемый экземпляр класса
        self.x = x
        self.y = y

pt = Point(1, 2)
print(pt) # экземпляр класса не создан