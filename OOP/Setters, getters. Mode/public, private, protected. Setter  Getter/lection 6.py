# # # attribute (без одного или двух подчеркиваний вначале) - публичное свойство (PUBLIC)
# # # _attribute (с одним подчёркиванием) - режим доступа PROTECTED (служит для обращения внутри класса и во всех его дочерних классах)
# # # __attribute (с двумя подчёркиваниями) - режим доступа PRIVATE (служит для обращения только внутри класса)
from accessify import private, protected

class Point:
    def __init__(self, x, y):
        self.__x = self.__y = 0
        if self.__check_value(x)  and self.__check_value(y):
            self.__x = x
            self.__y = y

    @classmethod  # Приватный метод для проверки правильности введёных координат точки 
    def __check_value(cls, x):
        return type(x) in (int, float)
        

    def set_coord(self, x, y): # СЕТТЕР
        if self.__check_value(x)  and self.__check_value(y):
            self.__x = x
            self.__y = y
        else:
            raise ValueError("Координаты должны быть числами")

    def get_coord(self): # ГЕТТЕР
        return self.__x, self.__y

pt = Point(1, 2)
# print(pt._x, pt._y) # режим доступа PROTECTED _x _y (всё работает, попрежнему можем обращаться к локальным атрибутам с режимом доступа PROTECTED)
# Это всего лишь предостережение, к таким атрибутам не стоит обращаться внешне, элементы _x показывают, что это внутренние служебные переменные

# print(pt.__x, pt.__y) # режим доступа PRIVATE __x __y (не можем обратиться к элементам __x __y)

pt.set_coord(10, 20) # при вызове никаких ошибок нет, так как внутри класса можно обращаться к этим локальным атрибутам
print(pt.get_coord()) # при вызове никаких ошибок нет, вывели на экран значения атрибутов __x __y через метод get_coord() внутри класса Point

############## КАК УЗНАТЬ КОДОВОЕ ИМЯ СВОЙСТВ ОБЪЕКТА ##################
# print(pt.__x) # ОШИБКА, так как __x приватный режим доступа
print(dir(pt)) # Чтобы узнать скрытую ссылку на атрибуты объекта pt класса Point (_Point__x - ссылка на __x) следовательно:
print(pt._Point__x) # Выведет значение приватного локального атрибута __x объекта pt класса Point (ДЕЛАТЬ ТАК НЕ РЕКОМЕНДУЕТСЯ, чтобы не нарушить целостность работы программы)




