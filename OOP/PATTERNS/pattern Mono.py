# Представим, что у нас некий многопоточный процесс и в каждом потоке создается свой экземпляр класса ThreatData.
# И нам хотелось бы, чтобы все они имели единые локальные свойства

# !!! При изменении существующего локального свойства в одном из экземпляров класса - это свойство меняется и во всех других экземплярах класса.
# !!! При добавлении нового локального свойство в одном экземпляре - оно добавляется и во все другие экземпляры класса.
class ThreatData:
    __shared_attrs = {
        "name": "thread_1",
        "data": {},
        "id": 1,
    }

    def __init__(self):
        self.__dict__ = self.__shared_attrs

th1 = ThreatData()
th2 = ThreatData()

th2.id = 3 # id меняются во всех экземплярах класса

th1.attr_new = "new_attr" # новое свойство появилось как и в th1, так и в th2
print(th1.__dict__)